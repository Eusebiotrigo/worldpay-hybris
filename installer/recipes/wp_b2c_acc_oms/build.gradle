apply plugin: 'installer-platform-plugin'

def localProps = {
    customConfig 'local.properties'
    property 'tomcat.generaloptions', '-Xmx4096M -XX:-UseLoopPredicate -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -ea -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true -Djava.endorsed.dirs="%CATALINA_HOME%/lib/endorsed" -Dcatalina.base=%CATALINA_BASE% -Dcatalina.home=%CATALINA_HOME% -Dfile.encoding=UTF-8 -Dlog4j.configuration=log4j_init_tomcat.properties -Djava.util.logging.config.file=jdk_logging.properties -Djava.io.tmpdir="${HYBRIS_TEMP_DIR}"'

    property 'website.electronics.http', 'http://electronics.local:9001/yacceleratorstorefront'
    property 'website.electronics.https', 'https://electronics.local:9002/yacceleratorstorefront'
    property 'website.apparel-de.http', 'http://apparel-de.local:9001/yacceleratorstorefront'
    property 'website.apparel-de.https', 'https://apparel-de.local:9002/yacceleratorstorefront'
    property 'website.apparel-uk.http', 'http://apparel-uk.local:9001/yacceleratorstorefront'
    property 'website.apparel-uk.https', 'https://apparel-uk.local:9002/yacceleratorstorefront'

    property 'googleApiKey', ''
}

def ext = {
    scanPathWithAutoLoad '${HYBRIS_BIN_DIR}/ext-worldpayoms'

    extName 'ordermanagementaddon'
    extName 'orderselfserviceaddon'
    extName 'ordermanagementfacade'
    extName 'ordermanagementwebservices'

    extName 'warehousing'
    extName 'warehousingbackoffice'
    extName 'warehousingfacade'
    extName 'warehousingwebservices'

    extName 'instore'

    extName 'mcc'
    extName 'backoffice'
    extName 'commercesearchbackoffice'
    extName 'commerceservicesbackoffice'
    extName 'solrserver'
    extName 'yacceleratorcockpits'
    extName 'yacceleratorinitialdata'
    extName 'yacceleratorordermanagement'
    extName 'yacceleratorstorefront'
    extName 'yaddon'
    extName 'ycommercewebservices'

    extName 'electronicsstore'
    extName 'apparelstore'

    extName 'acceleratorwebservicesaddon'

    extName 'customersupportbackoffice'
    extName 'customerticketingaddon'
    extName 'ticketsystembackoffice'

    extName 'rulebuilderbackoffice'
    extName 'couponbackoffice'
    extName 'droolsruleengineservices'
    extName 'couponfacades'
    extName 'promotionenginesamplesaddon'

    extName 'worldpayaddon'
    extName 'worldpayaddonbackoffice'
    extName 'worldpayapi'
    extName 'worldpaycscockpit'
    extName 'worldpaynotificationaddon'
    extName 'worldpaysampledataaddon'
    extName 'worldpayoccaddon'
}

def config = {
    localProperties localProps
    extensions ext
}

task setup << {
    apply plugin: 'installer-addon-plugin'

    def pl = platform(config)
    pl.setup()

    pl.project.addons {
        names "worldpayaddon,worldpaynotificationaddon,worldpaysampledataaddon,promotionenginesamplesaddon,customerticketingaddon,ordermanagementaddon,orderselfserviceaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform pl
    }

    pl.project.addons {
        names "worldpayoccaddon,acceleratorwebservicesaddon"
        template "ycommercewebservices"
        storeFronts "ycommercewebservices"
        platform pl
    }
}

task build << {
    def pl = platform(config)
    pl.build()
}

task initialize << {
    def pl = platform(config)
    pl.build()
    pl.initialize()
}

task start << {
    def pl = platform(config)
    pl.start()
}